{"version":3,"sources":["components/square/Square.js","components/board/Board.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","state","value","className","onClick","this","React","Component","Board","squares","Array","fill","xIsNext","lines","i","length","a","b","c","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAsBeA,E,kDAnBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAO,MAHI,E,qDAOT,IAAD,OACL,OACI,wBACAC,UAAU,SACVC,QAAS,kBAAM,EAAKJ,MAAMI,WAF1B,SAIKC,KAAKL,MAAME,Y,GAdPI,IAAMC,WCqFZC,E,kDAlFX,WAAYR,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTQ,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJE,E,4DAQHH,GAWZ,IAVA,IAAMI,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cACjBD,EAAMC,GADW,GAC5BE,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAIT,EAAQO,IAAMP,EAAQO,KAAOP,EAAQQ,IAAMR,EAAQO,KAAOP,EAAQS,GAClE,OAAOT,EAAQO,GAGvB,OAAO,O,kCAGCF,GACR,IAAML,EAAUJ,KAAKJ,MAAMQ,QAAQU,QAC/Bd,KAAKe,gBAAgBX,IAAYA,EAAQK,KAG7CL,EAAQK,GAAKT,KAAKJ,MAAMW,QAAU,IAAM,IACxCP,KAAKgB,SAAS,CACVZ,QAASA,EACTG,SAAUP,KAAKJ,MAAMW,a,mCAIhBE,GAAI,IAAD,OACZ,OACI,cAAC,EAAD,CACIZ,MAAOG,KAAKJ,MAAMQ,QAAQK,GAC1BV,QAAS,kBAAM,EAAKkB,YAAYR,Q,+BAMxC,IACIS,EADEC,EAASnB,KAAKe,gBAAgBf,KAAKJ,MAAMQ,SAS/C,OANIc,EADAC,EACS,WAAaA,EAEb,iBAAmBnB,KAAKJ,MAAMW,QAAU,IAAM,KAKvD,gCACI,qBAAKT,UAAU,SAAf,SAAyBoB,IACzB,sBAAKpB,UAAU,YAAf,UACKE,KAAKoB,aAAa,GAClBpB,KAAKoB,aAAa,GAClBpB,KAAKoB,aAAa,MAEvB,sBAAKtB,UAAU,YAAf,UACKE,KAAKoB,aAAa,GAClBpB,KAAKoB,aAAa,GAClBpB,KAAKoB,aAAa,MAEvB,sBAAKtB,UAAU,YAAf,UACKE,KAAKoB,aAAa,GAClBpB,KAAKoB,aAAa,GAClBpB,KAAKoB,aAAa,a,GA7EnBnB,IAAMC,W,MCmBXmB,MAnBf,WAEE,OACE,sBAAKvB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,EAAD,MAEF,sBAAKA,UAAU,YAAf,UACE,wBAGA,8BCFOwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4927cc69.chunk.js","sourcesContent":["import React from 'react';\n\nclass Square extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: null,\n        };\n    }\n\n    render() {\n        return (\n            <button \n            className='square' \n            onClick={() => this.props.onClick()}\n            >\n                {this.props.value}\n            </button>\n        )\n    }\n}\n\nexport default Square;","import React from 'react';\nimport Square from '../square/Square'\n\nclass Board extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: Array(9).fill(null),\n            xIsNext: true,\n        };\n    }\n\n    calculateWinner(squares) {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n                return squares[a];\n            }\n        }\n        return null;\n    }\n    \n    handleClick(i) {\n        const squares = this.state.squares.slice();\n        if (this.calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            squares: squares,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    renderSquare(i) {\n        return (\n            <Square\n                value={this.state.squares[i]}\n                onClick={() => this.handleClick(i)} />\n        )\n    }\n\n    \n    render() {\n        const winner = this.calculateWinner(this.state.squares);\n        let status;\n        if (winner) {\n            status = 'Winner: ' + winner;\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n\n\n        return (\n            <div>\n                <div className='status'>{status}</div>\n                <div className='board-row'>\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className='board-row'>\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className='board-row'>\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Board;","import Board from './components/board/Board';\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div className='game'>\n      <div className='game-board'>\n        <Board />\n      </div>\n      <div className='game-info'>\n        <div>\n\n        </div>\n        <ol>\n          \n        </ol>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}